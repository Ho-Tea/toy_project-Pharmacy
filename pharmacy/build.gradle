plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'groovy'
}

group = 'project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

bootJar {
	archiveFileName = 'app.jar'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation 'pl.allegro.tech.boot:handlebars-spring-boot-starter:0.3.2'

	implementation 'io.seruco.encoding:base62:0.1.3'
	//Retry
	implementation 'org.springframework.retry:spring-retry'

	// mockWebServer
	testImplementation 'com.squareup.okhttp3:okhttp:4.10.0'
	testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'

	//spock
	testImplementation('org.spockframework:spock-core:2.4-M1-groovy-4.0')
	testImplementation('org.spockframework:spock-spring:2.4-M1-groovy-4.0')

	//런타임에 클래스 기반 spock mock를 만들기 위해서 필요
	testImplementation('net.bytebuddy:byte-buddy:1.12.10')


	//testcontainers
	testImplementation 'org.testcontainers:spock:1.17.1'
	testImplementation 'org.testcontainers:mariadb:1.17.1'
}



tasks.named('test') {
	useJUnitPlatform()
}

// gradlew clean build -PKAKAO_REST_API_KEY={api key 값} 명령어로 전체 테스트 및 빌드하여 jar파일 생성
processTestResources {
	boolean hasProperty = project.hasProperty("KAKAO_REST_API_KEY")
	println ("Set KAKAO rest api key : $hasProperty()")
	filesMatching('**/application.yml') {
		expand(project.properties)
	}
}
